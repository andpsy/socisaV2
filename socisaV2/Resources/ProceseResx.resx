<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ALTE_CHELTUIELI_JUDECATA" xml:space="preserve">
    <value>Other judiciary expenses</value>
  </data>
  <data name="CALITATE" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="CALITATE_TERT" xml:space="preserve">
    <value>Third party type</value>
  </data>
  <data name="CANCEL_ACTIVE_FILTERS_TITLE" xml:space="preserve">
    <value>Cancel active filters</value>
  </data>
  <data name="CHELTUIELI_EXECUTARE" xml:space="preserve">
    <value>Enforcement expenses</value>
  </data>
  <data name="CHELTUIELI_JUDECATA_ACORDATE" xml:space="preserve">
    <value>Granted judiciary expenses</value>
  </data>
  <data name="CHELTUIELI_MICA_PUBLICITATE" xml:space="preserve">
    <value>Small publicity expenses</value>
  </data>
  <data name="CONFIRM_ADD_TO_CURRENT_FILE_MESSAGE" xml:space="preserve">
    <value>Do you want to add new Action to the current selected Loss file?!</value>
  </data>
  <data name="DATA_DEPUNERE" xml:space="preserve">
    <value>Submission date</value>
  </data>
  <data name="DATA_DEPUNERE_END" xml:space="preserve">
    <value>to:</value>
  </data>
  <data name="DATA_DEPUNERE_START" xml:space="preserve">
    <value>Submission date</value>
  </data>
  <data name="DATA_DE_LA" xml:space="preserve">
    <value>from:</value>
  </data>
  <data name="DATA_EXECUTARE" xml:space="preserve">
    <value>Enforcement date</value>
  </data>
  <data name="DATA_EXECUTARE_END" xml:space="preserve">
    <value>to:</value>
  </data>
  <data name="DATA_EXECUTARE_START" xml:space="preserve">
    <value>Enforcement date</value>
  </data>
  <data name="DATA_PANA_LA" xml:space="preserve">
    <value>to:</value>
  </data>
  <data name="DATA_SCA" xml:space="preserve">
    <value>SCA Date</value>
  </data>
  <data name="DATA_SCA_END" xml:space="preserve">
    <value>to:</value>
  </data>
  <data name="DATA_SCA_START" xml:space="preserve">
    <value>SCA Date</value>
  </data>
  <data name="DATA_STADIU_END" xml:space="preserve">
    <value>to:</value>
  </data>
  <data name="DATA_STADIU_START" xml:space="preserve">
    <value>Stage date</value>
  </data>
  <data name="DESPAGUBIRE_ACORDATA" xml:space="preserve">
    <value>Granted compensation</value>
  </data>
  <data name="FIRST_PROCES_TITLE" xml:space="preserve">
    <value>Navigate to the first Action</value>
  </data>
  <data name="ID_COMPLET" xml:space="preserve">
    <value>Court bar</value>
  </data>
  <data name="ID_CONTRACT" xml:space="preserve">
    <value>Contract</value>
  </data>
  <data name="ID_INSTANTA" xml:space="preserve">
    <value>Court</value>
  </data>
  <data name="ID_PARAT" xml:space="preserve">
    <value>Defendant</value>
  </data>
  <data name="ID_PROCES_STADIU" xml:space="preserve">
    <value>Current stage</value>
  </data>
  <data name="ID_RECLAMANT" xml:space="preserve">
    <value>Accuser</value>
  </data>
  <data name="ID_TERT" xml:space="preserve">
    <value>Third party</value>
  </data>
  <data name="ID_TIP_PROCES" xml:space="preserve">
    <value>Action type</value>
  </data>
  <data name="INFO_DOCUMENTE_DOSAR" xml:space="preserve">
    <value>Documents attached to Action</value>
  </data>
  <data name="INFO_GENERALE_DOSAR" xml:space="preserve">
    <value>General information about the Action</value>
  </data>
  <data name="INFO_PORTAL" xml:space="preserve">
    <value>Law suit informations from just.ro portal</value>
  </data>
  <data name="INFO_STADII_DOSAR" xml:space="preserve">
    <value>Action stages</value>
  </data>
  <data name="LAST_PROCES_TITLE" xml:space="preserve">
    <value>Navigate to the last Action</value>
  </data>
  <data name="LISTA_PROCESE" xml:space="preserve">
    <value>Actions list</value>
  </data>
  <data name="LISTA_PROCESE_TITLE" xml:space="preserve">
    <value>Actions list</value>
  </data>
  <data name="MONITORIZARE" xml:space="preserve">
    <value>Monitoring</value>
  </data>
  <data name="NEXT_PROCES_TITLE" xml:space="preserve">
    <value>Navigate to the next Action</value>
  </data>
  <data name="NR_DOSAR_CASCO" xml:space="preserve">
    <value>Casco file no.</value>
  </data>
  <data name="NR_DOSAR_EXECUTARE" xml:space="preserve">
    <value>Enforcement file no.</value>
  </data>
  <data name="NR_DOSAR_INSTANTA" xml:space="preserve">
    <value>Action Court no.</value>
  </data>
  <data name="NR_INTERN" xml:space="preserve">
    <value>Action internal no.</value>
  </data>
  <data name="NR_SCA" xml:space="preserve">
    <value>SCA no.</value>
  </data>
  <data name="NU_SUNT_PROCESE_FILTRATE" xml:space="preserve">
    <value>There are no filtered Actions</value>
  </data>
  <data name="OBSERVATII" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="ONORARIU_AVOCAT" xml:space="preserve">
    <value>Lawyer fee</value>
  </data>
  <data name="ONORARIU_AVOCAT_EXECUTARE" xml:space="preserve">
    <value>Enforcement lawyer fee</value>
  </data>
  <data name="ONORARIU_CURATOR" xml:space="preserve">
    <value>Fiduciary fee</value>
  </data>
  <data name="ONORARIU_EXPERT" xml:space="preserve">
    <value>Expert fee</value>
  </data>
  <data name="OPTIUNI" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="PENALITATI" xml:space="preserve">
    <value>Penalties</value>
  </data>
  <data name="PREV_PROCES_TITLE" xml:space="preserve">
    <value>Navigate to the previous Action</value>
  </data>
  <data name="RESEND_EMAIL_CONFIRMATION_MESSAGE" xml:space="preserve">
    <value>The Action has been sent before! Are you sure you want to send it again?!</value>
  </data>
  <data name="SEARCH_TITLE" xml:space="preserve">
    <value>Search/Filter</value>
  </data>
  <data name="SHOW_TITLE" xml:space="preserve">
    <value>Back to navigation</value>
  </data>
  <data name="STADIU" xml:space="preserve">
    <value>Stage</value>
  </data>
  <data name="SUMA_SOLICITATA" xml:space="preserve">
    <value>Requested amount</value>
  </data>
  <data name="TAXA_TIMBRU" xml:space="preserve">
    <value>Stamp duty</value>
  </data>
  <data name="TAXA_TIMBRU_REEXAMINARE" xml:space="preserve">
    <value>Reexamination stamp duty</value>
  </data>
  <data name="TIMBRU_JUDICIAR" xml:space="preserve">
    <value>Judiciary stamp duty</value>
  </data>
  <data name="ZILE_PENALIZARI" xml:space="preserve">
    <value>Penalty days</value>
  </data>
  <data name="_LABEL_EMAIL_ACTIUNE" xml:space="preserve">
    <value>Send Action to email</value>
  </data>
  <data name="_LABEL_EMAIL_ACTIUNE_TITLE" xml:space="preserve">
    <value>Send Action to email</value>
  </data>
  <data name="_LABEL_EXPORT_EXCEL" xml:space="preserve">
    <value>Export Actions to Excel</value>
  </data>
  <data name="_LABEL_EXPORT_PROCESE_IN_EXCEL" xml:space="preserve">
    <value>Export filtered Actions to Excel</value>
  </data>
  <data name="_LABEL_EXPORT_PROCESE_IN_EXCEL_TITLE" xml:space="preserve">
    <value>Export filtered Actions to Excel</value>
  </data>
  <data name="_LABEL_RAPORT_TERMENE" xml:space="preserve">
    <value>Court deadlines report</value>
  </data>
  <data name="_LABEL_RAPORT_TERMENE_TITLE" xml:space="preserve">
    <value>Court deadlines report</value>
  </data>
  <data name="_LABEL_TIPARIRE" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="_LABEL_TIPARIRE_ACTIUNE" xml:space="preserve">
    <value>Print Action</value>
  </data>
  <data name="_LABEL_TIPARIRE_ACTIUNE_TITLE" xml:space="preserve">
    <value>Print Action</value>
  </data>
</root>